<?php

/**
 * Implements hook_permission().
 */
function bc_islandora_permission() {
  return array(
    'administer bc_islandora' => array(
      'title' => t('Administer Barnard Islandora'),
      'description' => t('Perform administrative tasks for Barnard Islandora.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function bc_islandora_menu() {
  return array(
    'download_datastream/%/%' => array(
      'page callback' => 'bc_islandora_download_datastream',
      'page arguments' => array(1, 2),
      'access arguments' => array('access content'),
    ),
    'admin/islandora/bc_config' => array(
      'page callback' => 'drupal_get_form',
      'title' => 'Configure Barnard Islandora',
      'type' => MENU_NORMAL_ITEM,
      'page arguments' => array('bc_islandora_config'),
      'access arguments' => array('administer bc_islandora'),
    ),
    'islandora/object/%islandora_object/transcript' => array(
      'title' => 'Transcript',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'bc_islandora_transcript_menu',
      'page arguments' => array(2),
      'access callback' => 'bc_islandora_transcript_access',
      'access arguments' => array(2),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function bc_islandora_theme($existing, $type, $theme, $path) {
  return array(
    'bc_islandora_newspaper_issue' => array(
      'variables' => array(
        'object' => NULL,
        'start_page' => 1,
        'context' => 'issue',
      ),
      'file' => 'includes/bc_islandora.theme.inc',
    ),
    'bc_islandora_newspaper_page' => array(
      'variables' => array(
        'object' => NULL,
      ),
    ),
    'bc_islandora_newspaper_issue_navigator' => array(
      'variables' => array(
        'object' => NULL,
        'start_page' => 1,
      ),
      'file' => 'includes/bc_islandora.theme.inc',
    ),
    'bc_islandora_newspaper_page_controls' => array(
      'variables' => array(
        'object' => NULL,
      ),
      'file' => 'includes/bc_islandora.theme.inc',
    ),
    'bc_islandora_openseadragon_viewer' => array(
      'variables' => array(
        'fedora_object' => NULL,
        'uri' => NULL,
      ),
      'file' => 'includes/bc_islandora.theme.inc',
    ),
    'bc_islandora_breadcrumb' => array(
      'variables' => array(
        'breadcrumb' => array(),
      ),
      'file' => 'includes/bc_islandora.theme.inc',
    ),
    'bc_islandora_exhibition' => array(
      'variables' => array(
        'node' => array(),
      ),
      'file' => 'includes/bc_islandora.theme.inc',
    ),
  );
}

function bc_islandora_download_datastream($pid, $dsid) {
  module_load_include('inc', 'islandora', 'includes/datastream');

  $mods = _bc_islandora_mods_object($pid);
  $xml = $mods['mods'];
  if ($id  = (string) $xml->identifier) {
    $object[$dsid]->label = $id;
    //bc_islandora_view_datastream($object[$dsid]);
    islandora_view_datastream($object[$dsid], TRUE);
  }
  else {
    return drupal_not_found();
  }
}

function bc_islandora_config($form, &$form_state) {
  $form['bc_islandora_collection_newspaper'] = array(
    '#type' => 'textfield',
    '#title' => t('Newspaper collection pid'),
    '#default_value' => variable_get('bc_islandora_newspaper_pid', ''),
  );
  $form['bc_islandora_collection_textual'] = array(
    '#type' => 'textfield',
    '#title' => t('Textual materials collection pid'),
    '#default_value' => variable_get('bc_islandora_documents_pid', ''),
  );
  $form['bc_islandora_featured_nid'] = array(
    '#type' => 'textfield',
    '#title' => t('Featured homepage object nid'),
    '#default_value' => variable_get('bc_islandora_featured_nid', ''),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );
  return $form;
}

function bc_islandora_config_submit($form, &$form_state) {
  variable_set('bc_islandora_namespace', $form_state['values']['bc_islandora_namespace']);
  variable_set('bc_islandora_newspaper_pid', $form_state['values']['bc_islandora_collection_newspaper']);
  variable_set('bc_islandora_documents_pid', $form_state['values']['bc_islandora_collection_textual']);
  variable_set('bc_islandora_featured_nid', $form_state['values']['bc_islandora_featured_nid']);
  $form_state['redirect'] = 'admin/islandora/bc_config';
  drupal_set_message(t('Saved changes.'));
}

function bc_islandora_transcript_menu($object) {
  module_load_include('inc', 'islandora_paged_content', 'includes/utilities');

  $output = '';
  $transcript = array();
  $pages = islandora_paged_content_get_pages($object);
  foreach ($pages as $pid => $page) {
    $page_obj = islandora_object_load($pid);
    if ($ocr_text = $page_obj['OCR']->getContent(NULL)) {
      $transcript[$page['page']] = $ocr_text;
    }
  }
  foreach ($transcript as $page => $text) {
    // $output .= "<p><b>page $page</b>:</p>";
    // $output .= "<p>$text</p>";
    $output .= $text;
  }

  // Print the transcript.
  return "<pre>$output</pre>";
}

function bc_islandora_transcript_access($object) {
  module_load_include('inc', 'bc_islandora', 'includes/bc_islandora.theme');  
  // This object is a "letter" and the user has permission to view it.
  return _bc_islandora_is_genre($object, array('letter'));
}

/**
 * Implements hook_block_info().
 */
function bc_islandora_block_info() {
  $blocks = array(
    'bc_islandora_newspaper' => array(
      'info' => t('Newspaper Collection'),
      'status' => BLOCK_VISIBILITY_LISTED,
      'pages' => array('bulletin'),
      'region' => 'content',
    ),
    'bc_islandora_yearbook' => array(
      'info' => t('Book Collection'),
      'status' => BLOCK_VISIBILITY_LISTED,
      'pages' => array('yearbook'),
      'region' => 'content',
    ),
    'bc_islandora_student_pubs' => array(
      'info' => t('Student Publications'),
      'status' => BLOCK_VISIBILITY_LISTED,
      'pages' => array('student-publications'),
      'region' => 'content',
    ),
  );
  return $blocks;
}

/**
 * Implements hook_block_save().
 */
function bc_islandora_block_save($delta = '') {
  if (preg_match('/^bc_islandora_/', $delta) !== FALSE) {
    $variable = $delta . '_pid';
    variable_set($variable, $edit['islandora_collection_pid']);
  }
}

/**
 * Implements hook_block_view().
 */
function bc_islandora_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'bc_islandora_newspaper':
      if ($collection_pid = variable_get($delta . '_pid', 'islandora:1')) {
        module_load_include('inc', 'islandora_newspaper', 'includes/utilities');
        $decades_output = '<div class="decades"><ul id="decades">';
        $years_output = '<div class="years">';
        $months_output = '<div class="months">';
        $issues_output = '<div class="issues">';
        $months_sort = array();
        $issues_sort = array();
        $grouped_issues = array();

        $paper = islandora_object_load($collection_pid);
        $issues = $paper ? islandora_newspaper_get_issues($paper) : array();
        $grouped_issues = _bc_islandora_newspaper_group_issues($issues);
        ksort($grouped_issues);
        foreach ($grouped_issues as $decade => $years) {
          $decades_output .= '<li class="decade"><a href="#">' . $decade . '</a></li>';

          ksort($years);
          foreach ($years as $year => $months) {
            if (!isset($decade_start)) {
              $decade_start = preg_replace('/s$/', '', $decade);
              $years_output .= '<ul class="decade" id="' . $decade . '">';
            }
            elseif (!($year % 10) || ($year - $decade_start >= 10)) {
              $years_output .= '</ul>';
              $decade_start = ($year - ($year % 10));
              $years_output .= '<ul class="decade" id=' . $decade_start . 's' . '>';
            }
            $years_output .= '<li class="year" id="' . $year . '"><a href="#">' . $year . '</a></li>';

            foreach ($months as $month => $issues) {
              $month_display = date('F', strtotime($year . '-' . $month));
              $months_sort[$year][$month] = '<li class="month" id="' . $month . '"><a href="#">' . $month_display . '</a></li>';
              foreach ($issues as $day => $issue) {
                $issue_url = "islandora/object/{$issue[0]['pid']}";
                $issues_sort[$year][$month][$day] = '<li class="issue">' . l(preg_replace('/^0/', '', $day), $issue_url) . '</li>';
              }
            }
          }
        }
        $decades_output .= '</ul></div>';
        $years_output .= '</div>';
        foreach ($months_sort as $year => $month) {
          ksort($month);
          $months_output .= '<ul class="months-' . $year . '">';
          $months_output .= implode("\n", $month);
          $months_output .= '</ul>';
          foreach ($issues_sort[$year] as $issue_month => $day) {
            ksort($day);
            $issues_output .= '<ul class="issues-' . $year . '-' . $issue_month . '">';
            $issues_output .= implode("\n", $day);
            $issues_output .= '</ul>';
          }
        }

        $months_output .= '</div>';
        $issues_output .= '</div>';

        $output = '<div class="bulletin-nav">
            <span class="browse"><b>Browse issues by date:</b>&nbsp;</span><span class="decade"><a id="nav" href="#"></a></span><span class="month"></span><span class="day"></span><span class="year"><a id="nav" href="#"></a></span>
          </div>';
        $output .= '<div class="bulletin-calendar inactive">' . $decades_output . $years_output . $months_output . $issues_output . '</div>';
        $block['content'] = $output;
      }
    break;
    // TODO
    case 'bc_islandora_yearbook':
      $collection_pid = variable_get($delta . '_pid', 'islandora:bookCollection');
      // Only generate the block output if we can load the book collection.
      if ($book_collection = islandora_object_load($collection_pid)) {
        $years = array();
        $decade_output = '<div class="decades"><ul id="decades">';
        $years_output = '<div class="years">';
        // SPARQL query for isMemberOf book collection and hasModel bookCModel.
        $query = <<<EOQ
PREFIX islandora-rels-ext: <http://islandora.ca/ontology/relsext#>
PREFIX fedora-rels-ext: <info:fedora/fedora-system:def/relations-external#>
SELECT ?object
FROM <#ri>
WHERE {
  ?object fedora-rels-ext:isMemberOf <info:fedora/{$collection_pid}> ;
       <fedora-model:hasModel> <info:fedora/islandora:bookCModel> ;
}
EOQ;
        $results = $book_collection->repository->ri->sparqlQuery($query);
        // Cycle through SPARQL query results and generate a structured list of
        // yearbook years (structured as $years[decade][year][i]).
        foreach ($results as $r) {
          $pid = $r['object']['value'];
          $pid_parts = explode('-', $pid);
          // See if we got a volume number separated in the pid from the year
          // by a period and set $vol if found.
          if (strpos($pid_parts[1], '.') !== FALSE) {
            $year_parts = explode('.', $pid_parts[1]);
            $year = $year_parts[0];
            $vol = $year_parts[1];
          }
          else {
            $year = $pid_parts[1];
          }
          $decade = $year - ($year % 10) . 's';
          $yb_link = l($year, "islandora/object/{$pid}");
          // If we got a volume number, make sure the link is at the end of the
          // $years[decade][year] array...
          // (N.B. this doesn't work for >2 volumes, BUT that's ok I guess)
          if (isset($vol)) {
            $years[$decade][$year][1] = $yb_link . '&nbsp(' . $vol . ')';
            unset($vol);
          }
          else {
            $years[$decade][$year][0] = $yb_link;
          }
        }
        ksort($years);
        // Cycle through the $years array generated above.
        foreach ($years as $decade => $y) {
          ksort($y);
          $decade_output .= '<li class="decade"><a href="#">' . $decade . '</a></li>';
          // Cycle through the year subarray. Generate decade/year list output.
          foreach ($y as $year => $l) {
            $years_markup = function($link) {
              return '<li class="year">' . $link . '</li>';
            };
            $year_output = array_map($years_markup, $l);

            // Is this the first year of the decade? If so, generate opening
            // <ul> tag.
            if (!isset($decade_start)) {
              $decade_start = $decade;
              $years_output .= '<ul class="decade" id="' . $decade_start . '">';
            }
            // Is this the last year of the decade? If so, close the list and
            // start a new one.
            elseif (!($year % 10) || ($year - $decade_start >= 10)) {
              $years_output .= '</ul>';
              $decade_start = $decade;
              $years_output .= '<ul class="decade" id="' . $decade_start . '">';
            }
            foreach ($year_output as $yo) {
              $years_output .= $yo;
            }
          }
          // If this is the last decade in the list, close the list.
          if ($decade == end(array_keys($years))) {
            $decade_output .= '</ul>';
          }
        }
        $decade_output .= '</div>';
        $output = '<div class="yearbook-nav">
            <span class="browse"><b>Find a yearbook by date:</b>&nbsp;</span><span class="decade"><a id="nav" href="#"></a></span><span class="year"><a id="nav" href="#"></a></span>
          </div>';
        $output .= '<div class="yearbook-calendar">' . $decade_output . $years_output . '</div>';
        $block['content'] = $output;
      }
    break;
    case 'bc_islandora_student_pubs':
      $collection_pid = variable_get($delta . '_pid', 'islandora:154');
      $pubs_collection = islandora_object_load($collection_pid);
      $query = <<<EOQ
PREFIX islandora-rels-ext: <http://islandora.ca/ontology/relsext#>
PREFIX fedora-rels-ext: <info:fedora/fedora-system:def/relations-external#>
SELECT ?object
FROM <#ri>
WHERE {
  ?object fedora-rels-ext:isMemberOfCollection <info:fedora/{$collection_pid}> ;
}
EOQ;
      $results = $pubs_collection->repository->ri->sparqlQuery($query);
      foreach ($results as $r) {
        $pid = $r['object']['value'];
        $obj = islandora_object_load($pid);
        $cm_results = $obj->relationships->get(FEDORA_MODEL_URI, 'hasModel');
        dpm($pid);
        dpm($cm_results);
      }
    break;
  }
  return $block;
}

function _bc_islandora_newspaper_group_issues($issues) {
  $years = islandora_newspaper_group_issues($issues);
  $decades = array();
  foreach ($years as $year => $data) {
    $decade = ($year - ($year % 10)) . 's';
    $decades[$decade][$year] = $data;
  }
  return $decades;
}

function _bc_islandora_solr_query($fq) {
  $qp = new IslandoraSolrQueryProcessor();
  $qp->buildAndExecuteQuery('', array('f' => $fq));
  return $qp->islandoraSolrResult;
}

function _bc_islandora_mods_object($pid) {
  if ($object = islandora_object_load($pid)) {
    return array(
      'object' => $object,
      'mods' => simplexml_load_string($object['MODS']->getContent(NULL))
    );
  }
}
